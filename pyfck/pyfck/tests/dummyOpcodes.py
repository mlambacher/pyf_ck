'''
Dummy Opcode definitions used for testing



Marius Lambacher, 2017
'''


from enum import Enum

### opcodes

class OPCODE_CLASSES(Enum):
  INSTRUCTION = 1
  CONTROLFLOW_START = 2
  CONTROLFLOW_END = 3
  SPECIAL = 4


class OPCODES(Enum):
  OPX = 1
  OPY = 2
  OPZ = 3

  CONDU = 100
  CONDV = 101

  CFS = 11
  CFE = 12

  ALIAS = 10


OPCODE_IDENTIFIERS = {
  'XXX': OPCODES.OPX,
  'YYY': OPCODES.OPY,
  'ZZZ': OPCODES.OPZ,

  'CONDU': OPCODES.CONDU,
  'CONDV': OPCODES.CONDV,

  'CF': OPCODES.CFS,
  'ENDCF': OPCODES.CFE,

  'ALIAS': OPCODES.ALIAS
}

OPCODE_TYPES = {
  OPCODES.OPX: (OPCODE_CLASSES.INSTRUCTION, ('R')),
  OPCODES.OPY: (OPCODE_CLASSES.INSTRUCTION, ('R', 'RV')),
  OPCODES.OPZ: (OPCODE_CLASSES.INSTRUCTION, ('RV', 'RVR', 'RVV')),

  OPCODES.CONDU: (OPCODE_CLASSES.INSTRUCTION, ('',)),
  OPCODES.CONDV: (OPCODE_CLASSES.INSTRUCTION, ('V',)),

  OPCODES.CFS: (OPCODE_CLASSES.CONTROLFLOW_START, ('',)),
  OPCODES.CFE: (OPCODE_CLASSES.CONTROLFLOW_END, ('',)),

  OPCODES.ALIAS: (OPCODE_CLASSES.SPECIAL, ('TV', 'TR'))
}

